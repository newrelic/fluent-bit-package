
- name: Provision test executor instances and execute tests
  hosts: linux
  vars:
    node_version: 16.3.0

    # The following information is populated using the gathered inventory variables
    fluent_bit_package_name: "{{ tags.fb_package_name }}"
    pr_number: "{{ tags.pr_number }}"

    new_relic_api_key: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_API_KEY') }}"
    new_relic_account_id: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_ACCOUNT_ID') }}"
    new_relic_region: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_REGION') }}"

    monitored_file: /tmp/tail-log-file-test
    monitored_syslog_rfc_5424_tcp_port: 5140
    monitored_syslog_rfc_5424_udp_port: 6140
    monitored_tcp_port: 5170
    monitored_systemd_unit: "{{ (tags.os_distro == 'ubuntu' or tags.os_distro == 'debian') | ternary('ssh','sshd') }}"

    test_reports_dir: /tmp/test-reports
  environment:
    NEW_RELIC_API_KEY: "{{ new_relic_api_key }}"
    NEW_RELIC_ACCOUNT_ID: "{{ new_relic_account_id }}"
    NEW_RELIC_REGION: "{{ new_relic_region }}"
  tasks:
    - name: Install Infrastructure Agent
      ansible.builtin.include_role:
        name: newrelic.newrelic_install
        # Despite being the default, I want to emphasize that we do NOT want the role variables to be
        # exposed to the play. Otherwise, the "tags" variable specified below would overwrite the AWS "tags"
        # variable object (that comes from the inventory), which would cause that the `fluent_bit_package_name`
        # (or any variable depending on the AWS tags) would not be resolvable. Note that this option is only
        # available in "include_role", and not in "import_role".
        public: false
      vars:
        targets:
          - infrastructure
        tags:
          product: logging
          owning_team: logging
          project: fluent-bit-packaging-and-testing

    - name: Configure log forwarding
      ansible.builtin.include_role:
        name: create_logging_configs

    - name: Install Fluent Bit package to be tested for this distro
      ansible.builtin.include_role:
        name: install_fluent_bit_from_gh_prerelease
      vars:
        fb_package_name: "{{ fluent_bit_package_name }}"
        gh_prerelease_tag: "tmp-pr-{{ pr_number }}"
      when: pr_number is not regex('^local-.*')

    - name: Copy test suite
      ansible.builtin.copy:
        src: ../../integration-tests/test-suite
        dest: ~/

    - name: Run tests
      ansible.builtin.import_role:
        role: morgangraphics.ansible_role_nvm
      vars:
        nodejs_version: "{{ node_version }}"
        # CentOS comes without "wget", so using "curl" instead
        nvm_install: "curl"
        nvm_commands:
            - "cd ~/test-suite \
            && nvm exec default npm install \ 
            && LOGGING_ENDPOINT=https://staging-log-api.newrelic.com/log/v1 \
            NERD_GRAPH_URL=https://staging-api.newrelic.com/graphql \
            API_KEY={{ new_relic_api_key }} \
            ACCOUNT_ID=10418172 \
            MONITORED_FILE={{ monitored_file }} \
            MONITORED_TCP_PORT={{ monitored_tcp_port }} \
            MONITORED_SYSLOG_RFC_5424_TCP_PORT={{ monitored_syslog_rfc_5424_tcp_port }} \
            MONITORED_SYSLOG_RFC_5424_UDP_PORT={{ monitored_syslog_rfc_5424_udp_port }} \
            MONITORED_SYSTEMD_UNIT={{ monitored_systemd_unit }} \
            nvm exec default npm test"

    - name: Fetch results
      vars:
      fetch:
        flat: true # behave like copy, we only want the file, not the whole path
        src: ~/test-suite/reports/tests/test-report.xml
        dest: "{{ test_reports_dir }}/{{ fluent_bit_package_name }}.xml"

- name: Process and merge test reports
  hosts: localhost
  become: true
  vars:
    node_version: 18.18.0
    test_reports_dir: /tmp/test-reports
    test_report_name: report.xml
  tasks:
    - name: Copy controller scripts
      ansible.builtin.copy:
        src: ../../integration-tests/controller-scripts
        dest: ~/

    - name: Set up node and trigger process
      ansible.builtin.import_role:
        role: morgangraphics.ansible_role_nvm
      vars:
        nodejs_version: "{{ node_version }}"
        # CentOS come without "wget", so using "curl" instead
        nvm_install: "curl"
        nvm_commands:
          - "cd ~/controller-scripts \
          && nvm exec default npm install \
          && TEST_REPORT_ROOT_PATH={{ test_reports_dir }} nvm run resultsProcessor.js"

    - name: Capture merged test results
      command: "cat {{ test_reports_dir }}/{{ test_report_name }}"
      register: report

    - name: Display merged test results
      debug:
        msg: "{{ report.stdout }}"
