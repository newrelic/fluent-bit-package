- name: (linux) Run e2e tests
  hosts: linux
  vars:
    node_version: 16.14.0
    # The following information is populated using the gathered inventory variables
    fluent_bit_package_name: "{{ tags.fb_package_name }}"
    pre_release_name: "{{ tags.pre_release_name }}"
    fb_version: "{{ tags.fb_version }}"
    os_distro: "{{ tags.os_distro }}"
    os_version: "{{ tags.os_version }}"
    arch: "{{ tags.arch }}"

    # The following vars are injected in the fargate task env
    new_relic_api_key: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_API_KEY') }}"
    new_relic_account_id: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_ACCOUNT_ID') }}"
    new_relic_region: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_REGION') }}"

    monitored_file: /tmp/tail-log-file-test
    monitored_syslog_rfc_5424_tcp_port: 5140
    monitored_syslog_rfc_5424_udp_port: 6140
    monitored_tcp_port: 5170
    monitored_systemd_unit: "{{ (tags.os_distro == 'ubuntu' or tags.os_distro == 'debian') | ternary('ssh','sshd') }}"

    test_reports_dir: /tmp/test-reports
  environment:
    NEW_RELIC_API_KEY: "{{ new_relic_api_key }}"
    NEW_RELIC_ACCOUNT_ID: "{{ new_relic_account_id }}"
    NEW_RELIC_REGION: "{{ new_relic_region }}"
  tasks:
    - name: Wait for connection to be available
      wait_for_connection:

    - name: Register fluent-bit version
      ansible.builtin.shell: "/opt/fluent-bit/bin/fluent-bit --version | head -n1 | cut -d'v' -f2"
      register: installed_fb_version

    - name: Make sure we run the expected fluent-bit version
      ansible.builtin.assert:
        that:
          - "{{ fb_version == installed_fb_version.stdout }}"
        fail_msg: "Expected fluent-bit version {{ fb_version }}, but got {{ installed_fb_version.stdout }}"

    - name: Configure log forwarding
      ansible.builtin.include_role:
        name: create_logging_configs

    - name: Remove previous test suite
      ansible.builtin.file:
        path: ~/test-suite
        state: absent

    - name: Copy test suite
      ansible.builtin.copy:
        src: ../../integration-tests/test-suite
        dest: ~/

    - name: Install node and test-suite dependencies
      ansible.builtin.import_role:
        role: morgangraphics.ansible_role_nvm
      vars:
        nodejs_version: "{{ node_version }}"
        # CentOS comes without "wget", so using "curl" instead
        nvm_install: "curl"
        nvm_commands:
            - "cd ~/test-suite && nvm exec default npm install"

    - name: Run test-suite
      ansible.builtin.shell: "source ~/.nvm/nvm.sh && npm run test"
      args:
        executable: /bin/bash
        chdir: ~/test-suite
        creates: ~/test-suite/reports
      environment:
        LOGGING_ENDPOINT: https://log-api.newrelic.com/log/v1
        NERD_GRAPH_URL: https://api.newrelic.com/graphql
        API_KEY: "{{ new_relic_api_key }}"
        ACCOUNT_ID: "{{ new_relic_account_id }}"
        MONITORED_FILE: "{{ monitored_file }}"
        MONITORED_TCP_PORT: "{{ monitored_tcp_port }}"
        MONITORED_SYSLOG_RFC_5424_TCP_PORT: "{{ monitored_syslog_rfc_5424_tcp_port }}"
        MONITORED_SYSLOG_RFC_5424_UDP_PORT: "{{ monitored_syslog_rfc_5424_udp_port }}"
        MONITORED_SYSTEMD_UNIT: "{{ monitored_systemd_unit }}"

    - name: Fetch results
      fetch:
        flat: true # behave like copy, we only want the file, not the whole path
        src: ~/test-suite/reports/tests/test-report.xml
        dest: "{{ test_reports_dir }}/{{ fb_version }}_{{ os_distro }}_{{ os_version }}_{{ arch }}.xml"
