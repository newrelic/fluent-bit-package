# We need to have a separate playbook for windows
- name: (windows) Install CrowdStrike Falcon
  hosts: windows
  gather_facts: yes
  vars:
    falcon_client_id: "{{ lookup('env', 'CROWDSTRIKE_CLIENT_ID') }}"
    falcon_client_secret: "{{ lookup('env', 'CROWDSTRIKE_CLIENT_SECRET') }}"
    falcon_customer_id: "{{ lookup('env', 'CROWDSTRIKE_CUSTOMER_ID') }}"
    api_base_url: "https://api.laggar.gcw.crowdstrike.com"
    win_download_path: 'C:\Windows\Temp\falcon-sensor.exe'
  roles:
    - caos.ansible_roles.install_crowdstrike_falcon

- name: Provision Windows test executor instances and execute tests
  hosts: windows
  vars:
    node_version: 21.6.0
    # The following information is populated using the gathered inventory variables
    fluent_bit_package_name: "{{ tags.fb_package_name }}"
    pre_release_name: "{{ tags.pre_release_name }}"
    fb_version: "{{ tags.fb_version }}"
    os_distro: "{{ tags.os_distro }}"
    os_version: "{{ tags.os_version }}"
    arch: "{{ tags.arch }}"

    new_relic_api_key: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_API_KEY') }}"
    new_relic_account_id: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_ACCOUNT_ID') }}"
    new_relic_region: "{{ lookup('ansible.builtin.env', 'NEW_RELIC_REGION') }}"

    monitored_file: 'C:\Windows\Temp\tail-log-file-test'
    monitored_tcp_port: 5170
    monitored_windows_log_name_using_winevtlog: 'Application'
    monitored_windows_log_name_using_winlog: 'Application'

    test_suite_folder: 'C:\Windows\Temp\test-suite'
    test_suite_report_path: '{{ test_suite_folder }}\reports\tests\test-report.xml'
    test_reports_dir: /tmp/test-reports

    node_path: 'C:\Program Files\nodejs\'

    nr_fb_output_plugin_version: '1.19.2'
  environment:
    NEW_RELIC_API_KEY: "{{ new_relic_api_key }}"
    NEW_RELIC_ACCOUNT_ID: "{{ new_relic_account_id }}"
    NEW_RELIC_REGION: "{{ new_relic_region }}"
  tasks:
    - name: Wait for connection to be available
      wait_for_connection:

    - name: Install Infrastructure Agent
      ansible.builtin.include_role:
        name: newrelic.newrelic_install
        # Despite being the default, I want to emphasize that we do NOT want the role variables to be
        # exposed to the play. Otherwise, the "tags" variable specified below would overwrite the AWS "tags"
        # variable object (that comes from the inventory), which would cause that the `fluent_bit_package_name`
        # (or any variable depending on the AWS tags) would not be resolvable. Note that this option is only
        # available in "include_role", and not in "import_role".
        public: false
      vars:
        targets:
          - infrastructure
        tags:
          product: logging
          owning_team: logging
          project: fluent-bit-packaging-and-testing

    - name: Configure log forwarding
      ansible.builtin.include_role:
        name: create_logging_configs

    - name: Install Fluent Bit package to be tested for this distro
      ansible.builtin.include_role:
        name: install_fluent_bit_from_gh_prerelease
      vars:
        fb_package_name: "{{ fluent_bit_package_name }}"
        gh_prerelease_tag: "{{ pre_release_name }}"
      when: pre_release_name is not regex('^local-.*')

    - name: Install NR Fluent Bit output
      ansible.builtin.include_role:
        name: install_nr_fluent_bit_output
      vars:
        plugin_arch: "{{ (arch == 'win64') | ternary('amd64','386') }}"
        plugin_version: "{{ nr_fb_output_plugin_version }}"

    - name: Install Node
      win_chocolatey:
        name: nodejs
        version: '{{ node_version }}'

    - name: Capture contents of PATH environment variable
      ansible.windows.win_shell: echo "$env:PATH"
      register: original_path

    - name: Include node paths into patched_path
      set_fact:
        patched_path: '{{ original_path.stdout }};{{ node_path }}'

    - name: Copy test suite
      ansible.windows.win_copy:
        src: ../../integration-tests/test-suite
        dest: 'C:\Windows\Temp\'

    - name: Install test-suite dependencies
      ansible.windows.win_shell: 'npm i'
      args:
        chdir: '{{ test_suite_folder }}'
      environment:
        PATH: '{{ patched_path }}'

    - name: Remove previous reports
      ansible.windows.win_file:
        path: '{{ test_suite_folder }}\reports'
        state: absent

    - name: Run test-suite
      ansible.windows.win_shell: 'npm run test'
      args:
        chdir: '{{ test_suite_folder }}'
        creates: '{{ test_suite_folder }}\reports'
      environment:
        PATH: '{{ patched_path }}'
        LOGGING_ENDPOINT: https://log-api.newrelic.com/log/v1
        NERD_GRAPH_URL: https://api.newrelic.com/graphql
        API_KEY: "{{ new_relic_api_key }}"
        ACCOUNT_ID: "{{ new_relic_account_id }}"
        MONITORED_FILE: '{{ monitored_file }}'
        MONITORED_TCP_PORT: "{{ monitored_tcp_port }}"
        MONITORED_WINDOWS_LOG_NAME_USING_WINLOG: "{{ monitored_windows_log_name_using_winevtlog }}"
        MONITORED_WINDOWS_LOG_NAME_USING_WINEVTLOG: "{{ monitored_windows_log_name_using_winlog }}"

    - name: Fetch results
      fetch:
        flat: true # behave like copy, we only want the file, not the whole path
        src: '{{ test_suite_report_path }}'
        dest: '{{ test_reports_dir }}/{{ fb_version }}_{{ os_distro }}_{{ os_version }}_{{ arch }}.xml'
