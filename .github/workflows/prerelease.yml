name: Prerelease pipeline

on:
  release:
    types:
      - prereleased
    tags:
      - '*'

env:
  GPG_MAIL: ${{ secrets.LOGGING_GPG_MAIL }}
  GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
  GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
  AWS_S3_BUCKET_NAME: "nr-downloads-ohai-staging"
  AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock-staging"
  AWS_REGION: "us-east-1"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERSION: ${{ github.event.release.tag_name }}
  FB_PACKAGE_NAME: ${{ startsWith(github.event.release.tag_name, '1') && 'td-agent-bit' || 'fluent-bit' }}

jobs:
  rpm:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        packages:
          - { arch: x86_64, distro: amazonlinux, version: 2, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: aarch64, distro: amazonlinux, version: 2, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: x86_64, distro: amazonlinux, version: 2022, available-flavors: [fluent-bit] }
          # - { arch: aarch64, distro: amazonlinux, version: 2022, available-flavors: [fluent-bit] }
          - { arch: x86_64, distro: centos, version: 7, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: aarch64, distro: centos, version: 7, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: x86_64, distro: centos, version: 8, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: aarch64, distro: centos, version: 8, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: x86_64, distro: centos, version: 9, available-flavors: [fluent-bit] }
          - { arch: aarch64, distro: centos, version: 9, available-flavors: [fluent-bit] }

    env:
      # We want to use arm64 arch name instead aarch64 for the package we generate
      nr-arch: ${{ matrix.packages.arch == 'aarch64' && 'arm64' || matrix.packages.arch }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Create working directory
        if: ${{ contains(matrix.packages.available-flavors, env.FB_PACKAGE_NAME) }}
        run: mkdir -p packages/${{ env.VERSION }}/${{ matrix.packages.distro }}/${{ matrix.packages.version }}

      - name: Download and Rename binaries
        if: ${{ contains(matrix.packages.available-flavors, env.FB_PACKAGE_NAME) }}
        run: curl https://packages.fluentbit.io/${{ matrix.packages.distro }}/${{ matrix.packages.version }}/${{ matrix.packages.arch }}/${{ env.FB_PACKAGE_NAME }}-${{ env.VERSION }}-1.${{ matrix.packages.arch }}.rpm
          -o packages/${{ env.VERSION }}/${{ matrix.packages.distro }}/${{ env.FB_PACKAGE_NAME }}-${{ env.VERSION }}-1.${{ matrix.packages.distro }}-${{ matrix.packages.version }}.${{ env.nr-arch }}.rpm

      - name: Sign artifacts
        run: |
          sudo apt-get install -y debsigs
          bash ./scripts/sign.sh

      - uses: actions/upload-artifact@v2
        if: ${{ contains(matrix.packages.available-flavors, env.FB_PACKAGE_NAME) }}
        with:
          name: ${{ env.FB_PACKAGE_NAME }}_${{ env.VERSION }}_rpm
          path: packages/

  deb:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        packages:
          - { arch: amd64, distro: debian, version: bullseye, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: arm64, distro: debian, version: bullseye, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: amd64, distro: debian, version: buster, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: arm64, distro: debian, version: buster, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: amd64, distro: debian, version: bookworm, available-flavors: [fluent-bit] }
          - { arch: arm64, distro: debian, version: bookworm, available-flavors: [fluent-bit] }
          - { arch: amd64, distro: ubuntu, version: bionic, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: arm64, distro: ubuntu, version: bionic, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: amd64, distro: ubuntu, version: focal, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: arm64, distro: ubuntu, version: focal, available-flavors: [td-agent-bit, fluent-bit] }
          - { arch: amd64, distro: ubuntu, version: jammy, available-flavors: [fluent-bit] }
          - { arch: arm64, distro: ubuntu, version: jammy, available-flavors: [fluent-bit] }

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Create working directory
        if: ${{ contains(matrix.packages.available-flavors, env.FB_PACKAGE_NAME) }}
        run: mkdir -p packages/${{ env.VERSION }}/${{ matrix.packages.distro }}/${{ matrix.packages.version }}

      - name: Download and Rename binaries
        if: ${{ contains(matrix.packages.available-flavors, env.FB_PACKAGE_NAME) }}
        run: curl https://packages.fluentbit.io/${{ matrix.packages.distro }}/${{ matrix.packages.version }}/${{ env.FB_PACKAGE_NAME }}_${{ env.VERSION }}_${{ matrix.packages.arch }}.deb
          -o packages/${{ env.VERSION }}/${{ matrix.packages.distro }}/${{ matrix.packages.version }}/${{ env.FB_PACKAGE_NAME }}_${{ env.VERSION }}_${{ matrix.packages.distro }}-${{ matrix.packages.version }}_${{ matrix.packages.arch }}.deb

      - name: Sign artifacts
        run: |
          sudo apt-get install -y debsigs
          bash ./scripts/sign.sh

      - uses: actions/upload-artifact@v2
        if: ${{ contains(matrix.packages.available-flavors, env.FB_PACKAGE_NAME) }}
        with:
          name: ${{ env.FB_PACKAGE_NAME }}_${{ env.VERSION }}_deb
          path: packages/

  zip:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        packages:
          - { arch: 386, version: win32 }
          - { arch: amd64, version: win64 }

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Create working directory
        run: mkdir -p packages

      - name: Download FB for windows & create artifact
        run: |
          FB_MAJOR_MINOR_VERSION=$(cut -d. -f1-2 <<< "${{ env.VERSION }}")
          wget "http://fluentbit.io/releases/${FB_MAJOR_MINOR_VERSION}/fluent-bit-${{ env.VERSION }}-${{ matrix.packages.version }}".zip
          unzip fluent-bit-${{ env.VERSION }}-${{ matrix.packages.version }}.zip
          zip -r -j packages/fb-windows-${{ matrix.packages.arch }}.zip fluent-bit-${{ env.VERSION }}-${{ matrix.packages.version }}/bin/fluent-bit.exe fluent-bit-${{ env.VERSION }}-${{ matrix.packages.version }}/bin/fluent-bit.dll

      - uses: actions/upload-artifact@v2
        with:
          name: fluent-bit_${{ env.VERSION }}_zip
          path: packages/

  upload-assets:
    runs-on: ubuntu-20.04
    needs: [ rpm, deb, zip ]
    strategy:
      matrix:
        type: [ rpm, deb, zip ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Create working directory
        run: mkdir -p packages

      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.FB_PACKAGE_NAME }}_${{ env.VERSION }}_${{ matrix.type }}
          path: packages/${{ matrix.type }}

      - name: Upload asset
        run: bash ./scripts/upload_assets_gh.sh
