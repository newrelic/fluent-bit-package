name: Pre-release publish for Linux (Testing)

on:
#  workflow_dispatch:
#    inputs:
#      tag:
#        description: 'Tag to pre-release'
#        required: true

  push:
    branches:
      - 'publish_to_testing_bucket'

env:
#  TAG: ${{ github.event.inputs.tag }}
  TAG: "2.0.8"
  GPG_MAIL: ${{ secrets.LOGGING_GPG_MAIL }}
  GPG_PASSPHRASE: ${{ secrets.OHAI_GPG_PASSPHRASE }}
  GPG_PRIVATE_KEY_BASE64: ${{ secrets.OHAI_GPG_PRIVATE_KEY_BASE64 }} # base64 encoded
  AWS_S3_BUCKET_NAME: "nr-downloads-ohai-testing"
  AWS_S3_LOCK_BUCKET_NAME: "onhost-ci-lock-testing"
  AWS_REGION: "us-east-1"
#  FB_PACKAGE_NAME: ${{ startsWith(github.event.release.tag_name, '1') && 'td-agent-bit' || 'fluent-bit' }}
  FB_PACKAGE_NAME: 'fluent-bit'

jobs:
  publishing-to-s3:
    name: Publish linux artifacts into s3 test bucket
    runs-on: ubuntu-20.04
    needs: [ upload-assets ]
    steps:
      - name: Publish assets to S3 action
        uses: newrelic/infrastructure-publish-action@v1.2.3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.OHAI_AWS_ACCESS_KEY_ID_TESTING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.OHAI_AWS_SECRET_ACCESS_KEY_TESTING }}
          AWS_ROLE_ARN: ${{ secrets.OHAI_AWS_ROLE_ARN_TESTING }}
          AWS_ROLE_SESSION_NAME: ${{ secrets.OHAI_AWS_ROLE_SESSION_NAME_TESTING }}
        with:
#          tag: ${{env.VERSION}}
          tag: "2.0.8"
          app_name: ${{env.FB_PACKAGE_NAME}}
          repo_name: "newrelic/fluent-bit-package"
          schema: "custom"
          schema_url: "https://raw.githubusercontent.com/newrelic/fluent-bit-package/main/schemas/fb-linux.yml"
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
          aws_s3_lock_bucket_name: ${{ env.AWS_S3_LOCK_BUCKET_NAME }}
          access_point_host: "testing"
          run_id: ${{ github.run_id }}
          aws_region: ${{ env.AWS_REGION }}
          aws_role_session_name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
          # used for signing package stuff
          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
          gpg_private_key_base64: ${{ env.GPG_PRIVATE_KEY_BASE64 }}
